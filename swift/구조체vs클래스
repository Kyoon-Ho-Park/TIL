[구조체VS클래스]

*공통
(1) 프로퍼티 : 변수나 상수를 저장
(2) 메소드 : 함수를 사용하여 기능 제공
(3) 서브스크립트 : 
(4) 초기화 블록 : 생성자
(5) 확장 : 객체에 함수적 기능을 추가하는 확장(extends)구문 사용
(6) 프로토콜 : 인터페이스의 기능(기능에 대한 가이드만 제공, 구현부X)

*클래스 
(1) 상속 : 다른 클래스의 기능을 물려받음
(2) 타입 캐스팅 
(3) 소멸화 구문
(4) 참조에 의한 전달

//1. 인스턴스 생성
struct Resolution{
    var width = 0
    var height = 0

    func desc() -> String {
        return "Resolution 구조체"
    }
}

class VideoMode{
    var interlaced = false
    var frameRate = 0.0
    var name : String?

    var res = Resolution()

    func desc() -> String{
        return "VideMode 클래스"
    }
}

let res = Resolution() // 구조체 인스턴스 생성
let vm = VideoMode() //클래스 인스턴스 생성

//2. 초기화
Resolution()
Resolution(width: Int, height: Int)

//3. 구조체의 값 전달 방식 : 복사에 의한 전달

let hd = Resolution(width:1920, height:1080)
var cinema = hd

cinema.width = 2048 

print(cinema.width) // 2048
print(hd.width) // 1920

//4. 클래스의 값 전달 방식 : 참조에 의한 전달
let video = VideoMode()
video.name = "Original Video Instance"
print(video.name) // Original Video Instance

let dvd = video
dvd.name = "DVD Video Instance"
print(dvd.name) // DVD Video Instance

* 클래스 : 참조 타입이기 때문에 한 곳에서 수정할 경우 다른 곳에도 적용되는 특징
           메모리에 대한 이슈 문제 발생
           인스턴스를 해체해버리면 아직 참조하고 있는 변수, 상수, 함수 인자값은 잘못된 메모리 참조로 오류 발생
  구조체 : 값의 할당이기 때문에 단일 참조. 
  
  

